package com.example.demo.service;

import com.google.api.gax.core.FixedCredentialsProvider;
import com.google.auth.oauth2.GoogleCredentials;
import com.google.cloud.dialogflow.v2.*;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;
import jakarta.annotation.PostConstruct;

import java.io.*;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.UUID;

@Service
public class DialogflowService {

    // üß© JSON credentials d·∫°ng chu·ªói (Render: l∆∞u trong Environment Variable)
    @Value("${dialogflow.credentials.json:}")
    private String credentialsJson;

    // üíª File key local khi ch·∫°y tr√™n m√°y (ch·ªâ d√πng khi dev)
    @Value("${dialogflow.key.path:}")
    private String keyPath;

    // üåç Project ID trong Dialogflow
    @Value("${dialogflow.project.id}")
    private String projectId;

    @PostConstruct
    public void init() {
        System.out.println("‚úÖ Project ID: " + projectId);

        // Ghi r√µ h·ªá th·ªëng ƒëang d√πng lo·∫°i credentials n√†o
        if (System.getenv("GOOGLE_APPLICATION_CREDENTIALS") != null) {
            System.out.println("üåç ƒêang d√πng GOOGLE_APPLICATION_CREDENTIALS (file trong container).");
        } else if (credentialsJson != null && !credentialsJson.isEmpty()) {
            System.out.println("‚òÅÔ∏è ƒêang d√πng JSON t·ª´ bi·∫øn m√¥i tr∆∞·ªùng (Render).");
        } else if (keyPath != null && !keyPath.isEmpty()) {
            System.out.println("üíª ƒêang d√πng file local: " + keyPath);
        } else {
            System.out.println("‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y th√¥ng tin x√°c th·ª±c n√†o (credentials).");
        }
    }

    // ----------------------------------
    // üéØ G·ª≠i tin nh·∫Øn ƒë·∫øn Dialogflow
    // ----------------------------------
    public String detectIntent(String text) {
        try {
            GoogleCredentials credentials = loadCredentials();

            SessionsSettings sessionsSettings = SessionsSettings.newBuilder()
                    .setCredentialsProvider(FixedCredentialsProvider.create(credentials))
                    .build();

            try (SessionsClient sessionsClient = SessionsClient.create(sessionsSettings)) {
                SessionName session = SessionName.of(projectId, UUID.randomUUID().toString());

                TextInput textInput = TextInput.newBuilder()
                        .setText(text)
                        .setLanguageCode("vi")
                        .build();

                QueryInput queryInput = QueryInput.newBuilder()
                        .setText(textInput)
                        .build();

                DetectIntentRequest request = DetectIntentRequest.newBuilder()
                        .setSession(session.toString())
                        .setQueryInput(queryInput)
                        .build();

                DetectIntentResponse response = sessionsClient.detectIntent(request);
                String reply = response.getQueryResult().getFulfillmentText();

                System.out.println("üí¨ Dialogflow Response: " + reply);
                return reply != null && !reply.isEmpty() ? reply : "Xin l·ªói, t√¥i ch∆∞a hi·ªÉu c√¢u n√†y üòÖ";
            }

        } catch (Exception e) {
            e.printStackTrace();
            return "‚ö†Ô∏è Xin l·ªói, h·ªá th·ªëng ƒëang g·∫∑p s·ª± c·ªë.";
        }
    }

    // ----------------------------------
    // üîê T·ª± ƒë·ªông ch·ªçn c√°ch load credentials
    // ----------------------------------
    private GoogleCredentials loadCredentials() throws IOException {
        // 1Ô∏è‚É£ C√≥ file t·ª´ GOOGLE_APPLICATION_CREDENTIALS (Docker / Render)
        String envPath = System.getenv("GOOGLE_APPLICATION_CREDENTIALS");
        if (envPath != null && !envPath.isEmpty()) {
            System.out.println("üîπ Load credentials t·ª´ GOOGLE_APPLICATION_CREDENTIALS: " + envPath);
            return GoogleCredentials.fromStream(new FileInputStream(envPath));
        }

        // 2Ô∏è‚É£ C√≥ JSON l∆∞u trong bi·∫øn m√¥i tr∆∞·ªùng (Render)
        if (credentialsJson != null && !credentialsJson.isEmpty()) {
            System.out.println("üîπ Load credentials t·ª´ bi·∫øn m√¥i tr∆∞·ªùng JSON.");
            Path temp = Files.createTempFile("dialogflow-", ".json");
            Files.writeString(temp, credentialsJson, StandardCharsets.UTF_8);
            System.setProperty("GOOGLE_APPLICATION_CREDENTIALS", temp.toString());
            return GoogleCredentials.fromStream(Files.newInputStream(temp));
        }

        // 3Ô∏è‚É£ C√≥ file local khi ch·∫°y dev
        if (keyPath != null && !keyPath.isEmpty()) {
            System.out.println("üîπ Load credentials t·ª´ file local: " + keyPath);
            return GoogleCredentials.fromStream(new FileInputStream(keyPath));
        }

        throw new IllegalStateException("‚ùå Kh√¥ng t√¨m th·∫•y credentials h·ª£p l·ªá (Env, JSON ho·∫∑c File).");
    }
}
